Spring JDBC makes talking to a database easy by elimination the need for establishing a connection
handling expectations, and closing connections.
JdbcTemplate is given to interact with databases which offers a wide array of methods to perform
storage and retrieval of data
the template class hides all the boilerplate code for connection management and error handling whereby
the dev can focus on the SQL queries.

using JdbcTemplate a java app can store and retrieve objects of a class to a table in the database.
the template is a middle man between the app and the database


Spring Boot simplifications with JDBC
    only the dependency spring-boot-starter-jdbc is needed in the pom.xml
    Spring Boot automatically inits the datasource bean instead of creating with xml or java config in spring
    autoconfigures the template and other template beans that need explicitly registered in spring
    automatically create the database schema specified in the schema.sql file

In-memory database
    in memory databases are faster since they are stored in memory and not the disk
    this database lives as long as the application is running.
    when app is stopped the db is removed from memory.
    no setup like installing a server, creating a db, defining a schema, etc. like MySQL
    can easily swap the in memory db with a traditional database with a few changes in the pom.xml
    this db can be viewed in the browser

dependencies used
    start.spring.io
    Spring Web
    JDBC API
    H2 Database